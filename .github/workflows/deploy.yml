name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy to Cloudflare Pages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Deploy to Cloudflare Pages (Production)
        if: github.ref == 'refs/heads/main'
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: integra-explorer-platform
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          wranglerVersion: '3'

      - name: Deploy to Cloudflare Pages (Staging)
        if: github.ref == 'refs/heads/staging'
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: integra-explorer-platform
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: staging
          wranglerVersion: '3'

      - name: Deploy to Cloudflare Pages (Preview)
        if: github.event_name == 'pull_request'
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: integra-explorer-platform
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: preview-${{ github.event.pull_request.number }}
          wranglerVersion: '3'

      - name: Comment PR with deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const botComment = comments.find(comment => comment.user.type === 'Bot' && comment.body.includes('Cloudflare Pages Deployment'));
            const output = `### ðŸš€ Cloudflare Pages Deployment

            **Preview URL:** https://preview-${{ github.event.pull_request.number }}.integra-explorer-platform.pages.dev
            **Build Status:** âœ… Success
            **Commit:** ${{ github.sha }}`;

            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              });
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              });
            }